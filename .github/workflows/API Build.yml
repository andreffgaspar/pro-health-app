name: Build e Upload iOS com Fastlane

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest

    env:
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
      APPLE_KEY_ID: ${{ secrets.APPLE_KEY_ID }}
      APPLE_ISSUER_ID: ${{ secrets.APPLE_ISSUER_ID }}
      APPLE_KEY_CONTENT: ${{ secrets.APPLE_KEY_CONTENT }}
      APP_IDENTIFIER: com.prosoccerapp.prohealthapp
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APP_STORE_EMAIL: ${{ secrets.APP_STORE_EMAIL}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2

      - name: Install Fastlane
        run: gem install fastlane

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Instalar dependÃªncias
        run: npm install --legacy-peer-deps

      - name: Build do Vite
        run: npm run build

      - name: Remover pasta iOS
        run: rm -rf ios

      - name: Adicionar iOS e sincronizar Capacitor
        run: |
          npx cap add ios
          npx cap sync

      - name: Instalar CocoaPods
        run: |
          cd ios/App
          pod install

      - name: Criar chave privada para App Store Connect
        run: echo "${APPLE_KEY_CONTENT}" > AuthKey.p8

      - name: Configurar API Key do App Store Connect
        run: |
          mkdir -p ~/.fastlane
          cat <<EOF > ~/.fastlane/app_store_connect_api_key.json
          {
            "key_id": "${APPLE_KEY_ID}",
            "issuer_id": "${APPLE_ISSUER_ID}",
            "key": "${APPLE_KEY_CONTENT}",
            "in_house": false
          }
          EOF

      - name: Criar arquivo app_store_connect_api_key.json
        run: |
          mkdir -p ~/.fastlane
          echo '{
            "key_id": "${APPLE_KEY_ID}",
            "issuer_id": "${APPLE_ISSUER_ID}",
            "key": "${APPLE_KEY_CONTENT}",
            "in_house": false
          }' > ~/.fastlane/app_store_connect_api_key.json
        env:
          APPLE_KEY_ID: ${{ secrets.APPLE_KEY_ID }}
          APPLE_ISSUER_ID: ${{ secrets.APPLE_ISSUER_ID }}
          APPLE_KEY_CONTENT: ${{ secrets.APPLE_KEY_CONTENT }}

      - name: Criar estrutura do Fastlane e Fastfile com API Key
        run: |
          mkdir -p ios/App/fastlane
      
          cat <<EOF > ios/App/fastlane/Fastfile
          api_key_path("~/.fastlane/app_store_connect_api_key.json")
          
          default_platform(:ios)
          
          platform :ios do
            desc "Build and upload to TestFlight"
            lane :release do
              match(type: "appstore", readonly: true)
              build_app(scheme: "App", export_method: "app-store")
              upload_to_testflight
            end
          end
          EOF
       
      - name: Fastlane release
        run: |
          cd ios/App
          fastlane release
    
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: app-ios
          path: ios/App/*.ipa

      - name: Upload para TestFlight
        run: |
          cd ios/App
          fastlane pilot upload \
            --username "$APP_STORE_EMAIL" \
            --team_id "$APPLE_TEAM_ID" \
            --ipa "./App.ipa"
